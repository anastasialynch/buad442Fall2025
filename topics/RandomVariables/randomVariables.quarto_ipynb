{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Random Variables\"\n",
        "subtitle: \"The symbols by which we track what is known and unknown\"\n",
        "format: \n",
        "  revealjs:\n",
        "    theme: default\n",
        "    transition: slide\n",
        "    transition-speed: fast\n",
        "    controls: true\n",
        "    controls-layout: bottom-right\n",
        "    controls-tutorial: true\n",
        "    slide-number: true\n",
        "    show-slide-number: all\n",
        "    hash: true\n",
        "    keyboard: true\n",
        "    overview: true\n",
        "    center: true\n",
        "    touch: true\n",
        "    loop: false\n",
        "    rtl: false\n",
        "    navigation-mode: linear\n",
        "    shuffle: false\n",
        "    fragments: true\n",
        "    fragment-in-url: false\n",
        "    embedded: false\n",
        "    help: true\n",
        "    show-notes: false\n",
        "    auto-play-media: false\n",
        "    preload-iframes: false\n",
        "    auto-animate: true\n",
        "    auto-animate-matching: true\n",
        "    auto-animate-transition: false\n",
        "    auto-animate-easing: ease\n",
        "    auto-animate-duration: 1.0\n",
        "    auto-animate-unmatched: true\n",
        "    auto-animate-restart: false\n",
        "    backdrop-transition: fade\n",
        "    title-slide-attributes: \n",
        "      data-background-image: \"graphics/udairy.jpeg\"\n",
        "      data-background-size: \"cover\"\n",
        "      data-background-position: \"center\"\n",
        "      data-background-opacity: \"0.3\"\n",
        "    logo: \"\"\n",
        "    # css: styles/custom-dark.css\n",
        "execute:\n",
        "  echo: false\n",
        "  eval: true\n",
        "  warning: false\n",
        "  error: false\n",
        "---\n",
        "\n",
        "## Random Variables {.center .title-slide}\n",
        "\n",
        "### The symbols by which we track what is known and unknown\n",
        "\n",
        "**BUAD 442 - Interpretable Data Models**  \n",
        "**Fall 2025**\n",
        "\n",
        "<style>\n",
        "/* Default font color for entire presentation */\n",
        ".reveal {\n",
        "  color: #435a7f;\n",
        "}\n",
        "\n",
        "/* Headings and titles - coordinating color */\n",
        ".reveal h1, .reveal h2, .reveal h3, .reveal h4, .reveal h5, .reveal h6 {\n",
        "  color: #2c3e50 !important;\n",
        "  font-weight: bold;\n",
        "}\n",
        "\n",
        ".title-slide h1, .title-slide h2, .title-slide p {\n",
        "  color: white !important;\n",
        "  text-shadow: 2px 2px 4px rgba(0,0,0,0.8);\n",
        "  background: rgba(0,0,0,0.3);\n",
        "  padding: 10px;\n",
        "  border-radius: 5px;\n",
        "}\n",
        "</style>\n",
        "\n",
        "::: {.notes}\n",
        "Introduce the concept of random variables as the foundation of statistical modeling.\n",
        ":::\n",
        "\n",
        "---\n",
        "\n",
        "## What is a Random Variable? {.center background-color=\"white\" background-image=\"graphics/sunnyDay.png\" background-size=\"cover\" background-position=\"center\" background-opacity=\"0.3\"}\n",
        "\n",
        "**Random Variable (informally):** A measurement whose value is subject to uncertainty or randomness.\n",
        "```{dot}\n",
        "// | label: fig-rv\n",
        "// | fig-cap: Example random variables (informally).\n",
        "// | fig-width: 7\n",
        "\n",
        "digraph G {\n",
        "  A [label=\"sunny day\", shape=ellipse, style=filled, fillcolor=aliceblue]\n",
        "  B [label=\"ice cream sales\\nat UDairy\", shape=ellipse, style=filled, fillcolor=aliceblue]\n",
        "}\n",
        "```\n",
        "\n",
        "::: {.notes}\n",
        "The ellipse represents a random variable - it's a container for uncertain outcomes.\n",
        ":::\n",
        "\n",
        "---\n",
        "\n",
        "## Types of Random Variables {.center}\n",
        "\n",
        "### Discrete vs. Continuous\n",
        "\n",
        "**Discrete Random Variables:**\n",
        "- Countable outcomes (1, 2, 3, ...)\n",
        "- Examples: Number of customers, coin flips\n",
        "\n",
        "**Continuous Random Variables:**\n",
        "- Uncountable outcomes (any value in a range)\n",
        "- Examples: Temperature, height, time\n",
        "\n",
        "```{dot}\n",
        "// | label: fig-rv\n",
        "// | fig-cap: Example random variables (informally).\n",
        "// | fig-width: 7\n",
        "// | echo: false\n",
        "\n",
        "digraph G {\n",
        "  A [label=\"sunny day\", shape=ellipse, style=filled, fillcolor=aliceblue]\n",
        "  B [label=\"ice cream sales\\nat UDairy\", shape=ellipse, style=filled, fillcolor=aliceblue]\n",
        "}\n",
        "```\n",
        "\n",
        "::: {.notes}\n",
        "Explain the fundamental distinction between discrete and continuous random variables.\n",
        ":::\n",
        "\n",
        "---\n",
        "\n",
        "## Random Variables (Mathematically) {.center}\n",
        "\n",
        "### Mapping Real-World Outcomes to Numbers\n",
        "\n",
        "<br>\n",
        "\n",
        "| Real-World Outcome | Numerical Value |\n",
        "|-------------------|-----------------|\n",
        "| Sunny day         | 1               |\n",
        "| Not sunny day     | 0               |\n",
        "\n",
        "<br>\n",
        "\n",
        "**Random Variable:** A function that maps each possible outcome to a real number\n",
        "\n",
        "::: {.notes}\n",
        "Show how we convert qualitative outcomes into quantitative measurements for analysis.\n",
        ":::\n",
        "\n",
        "---\n",
        "\n",
        "## Mathematical Formalism {.center}\n",
        "\n",
        "### Random Variable Definition\n",
        "\n",
        "A **random variable** $X$ is a function that maps the sample space $\\Omega$ to the real numbers:\n",
        "\n",
        "$$X: \\Omega \\rightarrow \\mathbb{R}$$\n",
        "\n",
        "**Example:**\n",
        "\n",
        "- $\\Omega = \\{\\text{sunny}, \\text{not sunny}\\}$\n",
        "- $X(\\text{sunny}) = 1$\n",
        "- $X(\\text{not sunny}) = 0$\n",
        "\n",
        "::: {.notes}\n",
        "Introduce the formal mathematical definition and notation for random variables.\n",
        ":::\n",
        "\n",
        "---\n",
        "\n",
        "## Mathematical Formalism (Continued) {.center}\n",
        "\n",
        "### Key Properties\n",
        "\n",
        "A **random variable** $X$ is a function that maps the sample space $\\Omega$ to the real numbers:\n",
        "\n",
        "$$X: \\Omega \\rightarrow \\mathbb{R}$$\n",
        "\n",
        "**Key Properties:**\n",
        "\n",
        "- Each outcome gets exactly one number\n",
        "- Different outcomes can map to the same number\n",
        "- We can now do mathematical analysis on the numbers\n",
        "\n",
        "::: {.notes}\n",
        "Explain the key properties of random variables and their mathematical implications.\n",
        ":::\n",
        "\n",
        "---\n",
        "\n",
        "## Probability Distributions {.center}\n",
        "\n",
        "### Spreading Plausibility Over Outcomes\n",
        "\n",
        "**Key Insight:** Random variables are most useful when we assign **probabilities** to each outcome.\n",
        "\n",
        "**Example - Weather Random Variable:**\n",
        "\n",
        "- $X(\\text{sunny}) = 1$ with probability $P(X = 1) = 0.7$\n",
        "- $X(\\text{not sunny}) = 0$ with probability $P(X = 0) = 0.3$\n",
        "\n",
        "**Total probability must sum to 1:** $0.7 + 0.3 = 1.0$\n",
        "\n",
        "::: {.notes}\n",
        "Introduce the concept that random variables need probability assignments to be useful.\n",
        ":::\n",
        "\n",
        "---\n",
        "\n",
        "## Discrete Probability Distribution {.center}\n",
        "\n",
        "### Example: Ice Cream Sales\n",
        "\n",
        "<br>\n",
        "\n",
        "| Outcome | Value | Probability |\n",
        "|---------|-------|-------------|\n",
        "| High sales (>100) | 1 | 0.6 |\n",
        "| Low sales (≤100) | 0 | 0.4 |\n",
        "\n",
        "<br>\n",
        "\n",
        "**Properties:**\n",
        "\n",
        "- Each probability ≥ 0\n",
        "- Probabilities sum to 1: $0.6 + 0.4 = 1.0$\n",
        "\n",
        "::: {.notes}\n",
        "Show a concrete example of a discrete probability distribution with clear properties.\n",
        ":::\n",
        "\n",
        "---\n",
        "\n",
        "## Continuous Probability Distribution {.center}\n",
        "\n",
        "### Example: Temperature\n",
        "\n",
        "For continuous random variables, we use **probability density functions (PDFs)** to show how we allocate plausibility:\n",
        "\n",
        "- Temperature $T$ can be any of the infinite values in a range (e.g., 60°F to 90°F)\n",
        "- $P(T = 75°F) = \\frac{1}{\\infty} \\approx 0$ (exact values have zero probability)\n",
        "- Instead: $P(70°F < T < 80°F) = 0.3$ (ranges have positive probability)\n",
        "\n",
        "**Key:** Area under the PDF curve represents probability\n",
        "\n",
        "::: {.notes}\n",
        "Introduce continuous distributions and the concept of probability density.\n",
        ":::\n",
        "\n",
        "---\n",
        "\n",
        "## Discrete Example: Coin Flips {.center}"
      ],
      "id": "21a10867"
    },
    {
      "cell_type": "code",
      "metadata": {
        "fig-width": 8,
        "fig-height": 5,
        "fig-dpi": 150
      },
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "\n",
        "# Coin flip probabilities\n",
        "outcomes = ['Heads', 'Tails']\n",
        "probabilities = [0.5, 0.5]\n",
        "colors = ['aliceblue', 'cadetblue']\n",
        "\n",
        "plt.figure(figsize=(8, 5))\n",
        "bars = plt.bar(outcomes, probabilities, color=colors, edgecolor='navy', linewidth=2)\n",
        "plt.title('Probability Mass Function: Fair Coin', fontsize=20, fontweight='bold', color='#2c3e50')\n",
        "plt.ylabel('Probability', fontsize=16, fontweight='bold')\n",
        "plt.xlabel('Outcome', fontsize=16, fontweight='bold')\n",
        "plt.ylim(0, 0.6)\n",
        "plt.xticks(fontsize=14)\n",
        "plt.yticks(fontsize=14)\n",
        "\n",
        "# Add probability values on bars\n",
        "for bar, prob in zip(bars, probabilities):\n",
        "    plt.text(bar.get_x() + bar.get_width()/2, bar.get_height() + 0.01, \n",
        "             f'{prob:.1f}', ha='center', va='bottom', fontsize=16, fontweight='bold')\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "id": "bc782bb3",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "::: {.notes}\n",
        "Show a simple discrete probability mass function for coin flips.\n",
        ":::\n",
        "\n",
        "---\n",
        "\n",
        "## Discrete Example: Customer Count {.center}"
      ],
      "id": "eecd47e5"
    },
    {
      "cell_type": "code",
      "metadata": {
        "fig-width": 8,
        "fig-height": 5,
        "fig-dpi": 150
      },
      "source": [
        "# Customer count probabilities (Poisson-like)\n",
        "customers = [0, 1, 2, 3, 4, 5, 6, 7, 8]\n",
        "probs = [0.05, 0.15, 0.25, 0.25, 0.15, 0.08, 0.04, 0.02, 0.01]\n",
        "colors = ['aliceblue', 'cadetblue', '#9370db', 'aliceblue', 'cadetblue', '#9370db', 'aliceblue', 'cadetblue', '#9370db']\n",
        "\n",
        "plt.figure(figsize=(8, 5))\n",
        "bars = plt.bar(customers, probs, color=colors, edgecolor='navy', linewidth=1.5)\n",
        "plt.title('Probability Mass Function: Daily Customer Count', fontsize=20, fontweight='bold', color='#2c3e50')\n",
        "plt.ylabel('Probability', fontsize=16, fontweight='bold')\n",
        "plt.xlabel('Number of Customers', fontsize=16, fontweight='bold')\n",
        "plt.xticks(customers, fontsize=14)\n",
        "plt.yticks(fontsize=14)\n",
        "\n",
        "# Add probability values on bars\n",
        "for bar, prob in zip(bars, probs):\n",
        "    if prob > 0.05:  # Only show values for significant probabilities\n",
        "        plt.text(bar.get_x() + bar.get_width()/2, bar.get_height() + 0.005, \n",
        "                 f'{prob:.2f}', ha='center', va='bottom', fontsize=12, fontweight='bold')\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "id": "05ab3737",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "::: {.notes}\n",
        "Show a more complex discrete distribution for customer counts.\n",
        ":::\n",
        "\n",
        "---\n",
        "\n",
        "## Continuous Example: Temperature {.center}"
      ],
      "id": "ed2be2d0"
    },
    {
      "cell_type": "code",
      "metadata": {
        "fig-width": 8,
        "fig-height": 5,
        "fig-dpi": 150
      },
      "source": [
        "# Temperature distribution (normal-like)\n",
        "x = np.linspace(60, 90, 1000)\n",
        "mean_temp = 75\n",
        "std_temp = 5\n",
        "pdf = (1/(std_temp * np.sqrt(2 * np.pi))) * np.exp(-0.5 * ((x - mean_temp) / std_temp)**2)\n",
        "\n",
        "plt.figure(figsize=(8, 5))\n",
        "plt.plot(x, pdf, color='cadetblue', linewidth=3, label='PDF')\n",
        "plt.fill_between(x, pdf, alpha=0.3, color='aliceblue')\n",
        "plt.title('Probability Density Function: Daily Temperature', fontsize=20, fontweight='bold', color='#2c3e50')\n",
        "plt.ylabel('Probability Density', fontsize=16, fontweight='bold')\n",
        "plt.xlabel('Temperature (°F)', fontsize=16, fontweight='bold')\n",
        "plt.xticks(fontsize=14)\n",
        "plt.yticks(fontsize=14)\n",
        "plt.grid(True, alpha=0.3)\n",
        "\n",
        "# Add mean line\n",
        "plt.axvline(mean_temp, color='#9370db', linestyle='--', linewidth=2, label=f'Mean = {mean_temp}°F')\n",
        "plt.legend(fontsize=14)\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "id": "54c9df12",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "::: {.notes}\n",
        "Show a continuous probability density function for temperature.\n",
        ":::\n",
        "\n",
        "---\n",
        "\n",
        "## Continuous Example: Sales Revenue {.center}"
      ],
      "id": "bd68df69"
    },
    {
      "cell_type": "code",
      "metadata": {
        "fig-width": 8,
        "fig-height": 5,
        "fig-dpi": 150
      },
      "source": [
        "# Sales revenue distribution (lognormal-like)\n",
        "x = np.linspace(0, 2000, 1000)\n",
        "mean_log = 6.5\n",
        "std_log = 0.5\n",
        "pdf = (1/(x * std_log * np.sqrt(2 * np.pi))) * np.exp(-0.5 * ((np.log(x) - mean_log) / std_log)**2)\n",
        "pdf[0] = 0  # Handle log(0)\n",
        "\n",
        "plt.figure(figsize=(8, 5))\n",
        "plt.plot(x, pdf, color='#9370db', linewidth=3, label='PDF')\n",
        "plt.fill_between(x, pdf, alpha=0.3, color='aliceblue')\n",
        "plt.title('Probability Density Function: Daily Sales Revenue', fontsize=20, fontweight='bold', color='#2c3e50')\n",
        "plt.ylabel('Probability Density', fontsize=16, fontweight='bold')\n",
        "plt.xlabel('Revenue ($)', fontsize=16, fontweight='bold')\n",
        "plt.xticks(fontsize=14)\n",
        "plt.yticks(fontsize=14)\n",
        "plt.grid(True, alpha=0.3)\n",
        "\n",
        "# Add mean line\n",
        "mean_revenue = np.exp(mean_log + std_log**2/2)\n",
        "plt.axvline(mean_revenue, color='cadetblue', linestyle='--', linewidth=2, label=f'Mean ≈ ${mean_revenue:.0f}')\n",
        "plt.legend(fontsize=14)\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "id": "8736eb75",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "::: {.notes}\n",
        "Show a continuous probability density function for sales revenue with a skewed distribution.\n",
        ":::\n",
        "\n",
        "---"
      ],
      "id": "6e354327"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}